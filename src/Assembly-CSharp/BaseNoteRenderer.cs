using System;
using System.Collections.Generic;
using StrikeCore;
using UnityEngine;

// Token: 0x0200013A RID: 314
[RequireComponent(typeof(BasePlayer))]
public abstract class BaseNoteRenderer : MonoBehaviour, \u02B6\u02BB\u02BD\u02BB\u02BA\u02B6\u02B9\u02C0\u02B8\u02B4\u02BC, \u02C0\u02C1\u02B8\u02BF\u02BB\u02BB\u02B9\u02BC\u02B9\u02BD\u02B7
{
	// Token: 0x17000145 RID: 325
	// (get) Token: 0x06000DAF RID: 3503 RVA: 0x0000D554 File Offset: 0x0000B754
	public \u02B7\u02C0\u02B7\u02C0\u02B9\u02C0\u02BC\u02B3\u02BB\u02B7\u02B3 \u02B7\u02C0\u02B7\u02C0\u02B9\u02C0\u02BC\u02B3\u02BB\u02B7\u02B3
	{
		get
		{
			return \u02B7\u02C0\u02B7\u02C0\u02B9\u02C0\u02BC\u02B3\u02BB\u02B7\u02B3.Notes;
		}
	}

	// Token: 0x17000146 RID: 326
	// (get) Token: 0x06000DB0 RID: 3504 RVA: 0x0000D557 File Offset: 0x0000B757
	// (set) Token: 0x06000DB1 RID: 3505 RVA: 0x0000D55F File Offset: 0x0000B75F
	public \u02BB\u02B9\u02B2\u02B3\u02B4\u02B3\u02BF\u02C0\u02B4\u02B8\u02B9 \u02B7\u02B9\u02BA\u02B6\u02B3\u02B4\u02B5\u02C1\u02B4\u02B9\u02B6 { get; set; }

	// Token: 0x06000DB2 RID: 3506
	protected abstract int \u02C1\u02B7\u02C0\u02B7\u02B9\u02B2\u02B2\u02BF\u02BC\u02C0\u02BF(ushort \u02BF\u02BB\u02BB\u02BB\u02B6\u02B4\u02B8\u02BE\u02C0\u02C1\u02B9);

	// Token: 0x06000DB3 RID: 3507
	protected abstract Color \u02C1\u02B7\u02BF\u02BF\u02B2\u02BD\u02BD\u02B8\u02C1\u02B2\u02C0(ushort \u02BF\u02BB\u02BB\u02BB\u02B6\u02B4\u02B8\u02BE\u02C0\u02C1\u02B9);

	// Token: 0x06000DB4 RID: 3508 RVA: 0x000703EC File Offset: 0x0006E5EC
	protected virtual void Start()
	{
		this.\u02C0\u02B9\u02B3\u02B4\u02B8\u02BA\u02B3\u02B4\u02B7\u02B5\u02BD = GameObject.Find("Game Manager").GetComponent<GameManager>();
		this.\u02BB\u02B6\u02BD\u02BA\u02BC\u02B2\u02B8\u02BB\u02C0\u02BD\u02BE = base.GetComponent<TrackFadeManager>();
		this.\u02BD\u02B5\u02BC\u02B6\u02B5\u02BE\u02C1\u02BE\u02B7\u02C1\u02B5 = -this.firstNoteXPos * 2f / (this.laneCount - 1f);
		this.\u02B7\u02BB\u02BA\u02C0\u02BF\u02B5\u02B5\u02B9\u02BD\u02C1\u02B4 = (float)this.basePlayer.playerStuff.playerInfo.noteSpeed.CurrentValue;
		this.\u02BE\u02BD\u02BB\u02B8\u02B5\u02BF\u02BE\u02B6\u02BD\u02B9\u02BD();
		if (this.basePlayer.playerStuff.playerInfo.leftyFlip)
		{
			this.\u02BE\u02BF\u02B4\u02B6\u02BF\u02B3\u02C0\u02BA\u02C0\u02B9\u02BA();
		}
		this.\u02B2\u02BE\u02B4\u02BE\u02B9\u02B5\u02B4\u02BA\u02B6\u02BF\u02B8 = (this.\u02BD\u02B4\u02B8\u02B9\u02BF\u02BF\u02B4\u02C0\u02C1\u02BC\u02BF - this.\u02BB\u02BE\u02B6\u02B5\u02BD\u02BF\u02C1\u02B9\u02B4\u02B3\u02B9) / this.\u02B7\u02BB\u02BA\u02C0\u02BF\u02B5\u02B5\u02B9\u02BD\u02C1\u02B4;
		this.\u02BA\u02C1\u02B6\u02B4\u02B6\u02B6\u02B9\u02B7\u02B7\u02B2\u02BA = 0f;
		this.\u02B6\u02BB\u02B2\u02B5\u02BC\u02BB\u02B7\u02B3\u02C1\u02B4\u02B2 = base.gameObject.GetComponent<BasePlayer>().playerStuff.playerInfo.HasModChartModifier && !base.gameObject.GetComponent<BasePlayer>().playerStuff.playerInfo.HasModifier(Modifier.ModPrep);
		this.\u02BB\u02B6\u02BD\u02BA\u02BC\u02B2\u02B8\u02BB\u02C0\u02BD\u02BE.\u02B2\u02B7\u02BE\u02B2\u02C1\u02B4\u02B6\u02B7\u02BE\u02BD\u02B8(this);
	}

	// Token: 0x06000DB5 RID: 3509 RVA: 0x0000D568 File Offset: 0x0000B768
	public void \u02BF\u02B2\u02B6\u02B6\u02BD\u02C0\u02BE\u02B6\u02B6\u02BA\u02B8(float \u02B3\u02BD\u02BE\u02BB\u02BB\u02B9\u02B2\u02B9\u02BC\u02BB\u02BF, float \u02C1\u02B8\u02B7\u02B5\u02B2\u02BA\u02BC\u02B2\u02B7\u02B2\u02BC, float \u02B2\u02BA\u02BD\u02B8\u02C1\u02B3\u02B8\u02BF\u02B5\u02B9\u02BA, float \u02B3\u02BD\u02B6\u02B8\u02B3\u02BE\u02B3\u02C0\u02B3\u02C1\u02B4)
	{
		this.\u02BD\u02B4\u02B8\u02B9\u02BF\u02BF\u02B4\u02C0\u02C1\u02BC\u02BF = \u02C1\u02B8\u02B7\u02B5\u02B2\u02BA\u02BC\u02B2\u02B7\u02B2\u02BC;
		this.\u02B8\u02B4\u02B5\u02B8\u02C1\u02B4\u02B2\u02B4\u02BF\u02BC\u02BC = \u02B3\u02BD\u02BE\u02BB\u02BB\u02B9\u02B2\u02B9\u02BC\u02BB\u02BF;
		this.\u02B2\u02BE\u02B4\u02BE\u02B9\u02B5\u02B4\u02BA\u02B6\u02BF\u02B8 = (this.\u02BD\u02B4\u02B8\u02B9\u02BF\u02BF\u02B4\u02C0\u02C1\u02BC\u02BF - this.\u02BB\u02BE\u02B6\u02B5\u02BD\u02BF\u02C1\u02B9\u02B4\u02B3\u02B9) / this.\u02B7\u02BB\u02BA\u02C0\u02BF\u02B5\u02B5\u02B9\u02BD\u02C1\u02B4;
	}

	// Token: 0x06000DB6 RID: 3510 RVA: 0x0000D592 File Offset: 0x0000B792
	protected virtual void \u02BE\u02BF\u02B4\u02B6\u02BF\u02B3\u02C0\u02BA\u02C0\u02B9\u02BA()
	{
		this.firstNoteXPos *= -1f;
		this.\u02BD\u02B5\u02BC\u02B6\u02B5\u02BE\u02C1\u02BE\u02B7\u02C1\u02B5 *= -1f;
	}

	// Token: 0x06000DB7 RID: 3511 RVA: 0x000704FC File Offset: 0x0006E6FC
	protected virtual void \u02BE\u02BD\u02BB\u02B8\u02B5\u02BF\u02BE\u02B6\u02BD\u02B9\u02BD()
	{
		this.\u02C0\u02B2\u02BD\u02B9\u02B8\u02B5\u02BD\u02B5\u02BC\u02B9\u02BD = new GameObject[this.\u02B5\u02BB\u02B2\u02BA\u02B5\u02B6\u02B2\u02B2\u02BC\u02BD\u02B7];
		float num = SettingsController.\u02B3\u02B8\u02B6\u02C1\u02B2\u02B2\u02B5\u02C1\u02B6\u02B5\u02C0.GetFloatPercent * this.\u02BC\u02B7\u02B8\u02B7\u02B4\u02B8\u02BE\u02B2\u02B4\u02BA\u02B2;
		float num2 = SettingsController.\u02B3\u02B8\u02B6\u02C1\u02B2\u02B2\u02B5\u02C1\u02B6\u02B5\u02C0.GetFloatPercent * this.\u02C0\u02B5\u02B4\u02B5\u02C0\u02BB\u02B7\u02BA\u02B7\u02BD\u02B7;
		Vector2 vector = new Vector2(num, num2);
		this.\u02B7\u02B6\u02BD\u02BC\u02BD\u02BB\u02BA\u02B2\u02B4\u02B6\u02B7 = new \u02BF\u02BB\u02BF\u02B2\u02B6\u02C1\u02BC\u02BD\u02B3\u02BB\u02BB[this.\u02B5\u02BB\u02B2\u02BA\u02B5\u02B6\u02B2\u02B2\u02BC\u02BD\u02B7];
		for (int i = 0; i < this.\u02B5\u02BB\u02B2\u02BA\u02B5\u02B6\u02B2\u02B2\u02BC\u02BD\u02B7; i++)
		{
			this.\u02C0\u02B2\u02BD\u02B9\u02B8\u02B5\u02BD\u02B5\u02BC\u02B9\u02BD[i] = global::UnityEngine.Object.Instantiate<GameObject>(this.\u02B8\u02B4\u02B3\u02B7\u02B7\u02B7\u02BF\u02B8\u02BA\u02B4\u02BE, Vector3.zero, this.\u02B8\u02B4\u02B3\u02B7\u02B7\u02B7\u02BF\u02B8\u02BA\u02B4\u02BE.transform.rotation);
			this.\u02C0\u02B2\u02BD\u02B9\u02B8\u02B5\u02BD\u02B5\u02BC\u02B9\u02BD[i].SetActive(false);
			this.\u02C0\u02B2\u02BD\u02B9\u02B8\u02B5\u02BD\u02B5\u02BC\u02B9\u02BD[i].transform.parent = base.transform;
			this.\u02C0\u02B2\u02BD\u02B9\u02B8\u02B5\u02BD\u02B5\u02BC\u02B9\u02BD[i].transform.localScale = vector;
			this.\u02B7\u02B6\u02BD\u02BC\u02BD\u02BB\u02BA\u02B2\u02B4\u02B6\u02B7[i] = this.\u02C0\u02B2\u02BD\u02B9\u02B8\u02B5\u02BD\u02B5\u02BC\u02B9\u02BD[i].GetComponent<\u02BF\u02BB\u02BF\u02B2\u02B6\u02C1\u02BC\u02BD\u02B3\u02BB\u02BB>();
			this.\u02B7\u02B6\u02BD\u02BC\u02BD\u02BB\u02BA\u02B2\u02B4\u02B6\u02B7[i].\u02B7\u02B9\u02BA\u02B6\u02B3\u02B4\u02B5\u02C1\u02B4\u02B9\u02B6 = this.\u02B7\u02B9\u02BA\u02B6\u02B3\u02B4\u02B5\u02C1\u02B4\u02B9\u02B6;
			if (BaseMenu.\u02B6\u02B7\u02BD\u02BE\u02BB\u02BE\u02C0\u02C1\u02B7\u02B4\u02C0 && global::UnityEngine.Random.Range(0, 2) == 1)
			{
				this.\u02C0\u02B2\u02BD\u02B9\u02B8\u02B5\u02BD\u02B5\u02BC\u02B9\u02BD[i].transform.localScale = new Vector2(num, -num2);
			}
			this.\u02B7\u02B6\u02BD\u02BC\u02BD\u02BB\u02BA\u02B2\u02B4\u02B6\u02B7[i].\u02B8\u02C0\u02BF\u02BE\u02BF\u02B9\u02BE\u02B3\u02BA\u02BF\u02B7 = this.\u02C0\u02B2\u02BD\u02B9\u02B8\u02B5\u02BD\u02B5\u02BC\u02B9\u02BD[i].transform.localScale;
		}
	}

	// Token: 0x06000DB8 RID: 3512 RVA: 0x0000D5B8 File Offset: 0x0000B7B8
	public virtual void Reset()
	{
		this.\u02B2\u02B5\u02B7\u02BB\u02BD\u02B5\u02BA\u02B3\u02B2\u02BE\u02B3 = 0;
		this.\u02C0\u02C0\u02BA\u02B9\u02B7\u02B3\u02BB\u02B8\u02B8\u02B2\u02B3 = null;
	}

	// Token: 0x06000DB9 RID: 3513 RVA: 0x0007064C File Offset: 0x0006E84C
	protected ValueTuple<int, int> \u02B8\u02BD\u02BF\u02B2\u02B5\u02B9\u02B7\u02B7\u02B8\u02B5\u02B2<T>(List<T> \u02B9\u02B5\u02B8\u02C1\u02BA\u02B2\u02BA\u02C0\u02C1\u02C1\u02BD, ref int \u02BE\u02B6\u02BE\u02B4\u02B2\u02B3\u02B5\u02B6\u02C1\u02B5\u02B6) where T : \u02B6\u02BC\u02C0\u02C1\u02B2\u02B4\u02BF\u02BE\u02B5\u02B2\u02BB
	{
		if (\u02B9\u02B5\u02B8\u02C1\u02BA\u02B2\u02BA\u02C0\u02C1\u02C1\u02BD == null)
		{
			return new ValueTuple<int, int>(-1, -1);
		}
		int num = -1;
		int num2 = -1;
		int i = \u02BE\u02B6\u02BE\u02B4\u02B2\u02B3\u02B5\u02B6\u02C1\u02B5\u02B6;
		while (i < \u02B9\u02B5\u02B8\u02C1\u02BA\u02B2\u02BA\u02C0\u02C1\u02C1\u02BD.Count)
		{
			T t = \u02B9\u02B5\u02B8\u02C1\u02BA\u02B2\u02BA\u02C0\u02C1\u02C1\u02BD[i];
			if (t.\u02B2\u02B8\u02BA\u02BA\u02BC\u02B7\u02B5\u02B5\u02B6\u02B5\u02C1 > this.\u02B3\u02BE\u02B8\u02BC\u02C0\u02B4\u02BC\u02BB\u02B4\u02BC\u02B4)
			{
				break;
			}
			if (t.\u02B2\u02B8\u02BA\u02BA\u02BC\u02B7\u02B5\u02B5\u02B6\u02B5\u02C1 + t.\u02BB\u02BE\u02BA\u02B8\u02BE\u02B9\u02BF\u02B3\u02B4\u02B8\u02BD < this.\u02B8\u02BB\u02BC\u02BE\u02B6\u02B2\u02BC\u02B4\u02C0\u02B3\u02C0)
			{
				i++;
				\u02BE\u02B6\u02BE\u02B4\u02B2\u02B3\u02B5\u02B6\u02C1\u02B5\u02B6++;
			}
			else
			{
				if (num == -1)
				{
					num = i;
				}
				num2 = i;
				i++;
			}
		}
		return new ValueTuple<int, int>(num, num2);
	}

	// Token: 0x06000DBA RID: 3514 RVA: 0x000706D8 File Offset: 0x0006E8D8
	protected int \u02B9\u02B4\u02B6\u02BD\u02B6\u02B9\u02BF\u02B7\u02C0\u02B3\u02BE<T>(List<T> \u02B9\u02B5\u02B8\u02C1\u02BA\u02B2\u02BA\u02C0\u02C1\u02C1\u02BD, GameObject[] \u02B5\u02BA\u02B7\u02C1\u02BD\u02BD\u02C1\u02B5\u02C1\u02BB\u02BF, SpriteRenderer[] \u02BD\u02B4\u02B9\u02C1\u02C1\u02B5\u02C1\u02BE\u02B4\u02BA\u02BC, int \u02BE\u02B6\u02BE\u02B4\u02B2\u02B3\u02B5\u02B6\u02C1\u02B5\u02B6, int \u02BB\u02BC\u02C1\u02B5\u02B5\u02BA\u02B9\u02B6\u02BF\u02B5\u02C0, int \u02B6\u02B4\u02C0\u02B8\u02C1\u02C0\u02BE\u02BC\u02B6\u02B3\u02BF = 0) where T : \u02B6\u02BC\u02C0\u02C1\u02B2\u02B4\u02BF\u02BE\u02B5\u02B2\u02BB
	{
		if (\u02B9\u02B5\u02B8\u02C1\u02BA\u02B2\u02BA\u02C0\u02C1\u02C1\u02BD == null)
		{
			return 0;
		}
		int num = \u02B5\u02BA\u02B7\u02C1\u02BD\u02BD\u02C1\u02B5\u02C1\u02BB\u02BF.Length;
		int num2 = \u02BE\u02B6\u02BE\u02B4\u02B2\u02B3\u02B5\u02B6\u02C1\u02B5\u02B6;
		while (num2 <= \u02BB\u02BC\u02C1\u02B5\u02B5\u02BA\u02B9\u02B6\u02BF\u02B5\u02C0 && num2 < \u02B9\u02B5\u02B8\u02C1\u02BA\u02B2\u02BA\u02C0\u02C1\u02C1\u02BD.Count && \u02B6\u02B4\u02C0\u02B8\u02C1\u02C0\u02BE\u02BC\u02B6\u02B3\u02BF < num)
		{
			T t = \u02B9\u02B5\u02B8\u02C1\u02BA\u02B2\u02BA\u02C0\u02C1\u02C1\u02BD[num2];
			__FIXME_clon_util.\u02C0\u02BF\u02B7\u02BA\u02B6\u02BA\u02B2\u02B4\u02B5\u02B8\u02B9 u02C0_u02BF_u02B7_u02BA_u02B6_u02BA_u02B2_u02B4_u02B5_u02B8_u02B = __FIXME_clon_util.\u02C1\u02BF\u02B8\u02B2\u02BA\u02B3\u02B4\u02B3\u02C1\u02BC\u02BE((uint)t.\u02BF\u02C0\u02B8\u02BB\u02BA\u02B8\u02B3\u02BA\u02B4\u02BB\u02BF).\u02BC\u02C0\u02B8\u02B9\u02B4\u02BB\u02BE\u02B6\u02BC\u02B7\u02C1();
			while (u02C0_u02BF_u02B7_u02BA_u02B6_u02BA_u02B2_u02B4_u02B5_u02B8_u02B.\u02BF\u02B5\u02B7\u02BB\u02B5\u02BB\u02B7\u02B5\u02B6\u02BA\u02BC())
			{
				ushort num3 = (ushort)u02C0_u02BF_u02B7_u02BA_u02B6_u02BA_u02B2_u02B4_u02B5_u02B8_u02B.\u02B9\u02BA\u02BB\u02B4\u02C0\u02B4\u02B6\u02B2\u02B9\u02B3\u02BF;
				int num4 = this.\u02C1\u02B7\u02C0\u02B7\u02B9\u02B2\u02B2\u02BF\u02BC\u02C0\u02BF(num3);
				\u02B5\u02BA\u02B7\u02C1\u02BD\u02BD\u02C1\u02B5\u02C1\u02BB\u02BF[\u02B6\u02B4\u02C0\u02B8\u02C1\u02C0\u02BE\u02BC\u02B6\u02B3\u02BF].SetActive(true);
				SpriteRenderer spriteRenderer = \u02BD\u02B4\u02B9\u02C1\u02C1\u02B5\u02C1\u02BE\u02B4\u02BA\u02BC[\u02B6\u02B4\u02C0\u02B8\u02C1\u02C0\u02BE\u02BC\u02B6\u02B3\u02BF];
				Vector2 size = spriteRenderer.size;
				size.x = this.\u02B5\u02BE\u02B7\u02BC\u02C0\u02B2\u02B9\u02BD\u02BA\u02BF\u02BE(num4);
				size.y = t.\u02BB\u02BE\u02BA\u02B8\u02BE\u02B9\u02BF\u02B3\u02B4\u02B8\u02BD * this.\u02B7\u02BB\u02BA\u02C0\u02BF\u02B5\u02B5\u02B9\u02BD\u02C1\u02B4 + 0.25f;
				spriteRenderer.size = size;
				Color color = this.\u02C1\u02B7\u02BF\u02BF\u02B2\u02BD\u02BD\u02B8\u02C1\u02B2\u02C0(num3);
				color.a = 0.75f;
				spriteRenderer.color = color;
				float num5 = __FIXME_clon_util.\u02B5\u02B9\u02C1\u02BB\u02B6\u02B3\u02BA\u02BE\u02B9\u02B5\u02BF((double)t.\u02B2\u02B8\u02BA\u02BA\u02BC\u02B7\u02B5\u02B5\u02B6\u02B5\u02C1, this.\u02C0\u02B9\u02B3\u02B4\u02B8\u02BA\u02B3\u02B4\u02B7\u02B5\u02BD.\u02B7\u02B4\u02BA\u02B5\u02B5\u02B8\u02BE\u02B5\u02B3\u02B5\u02BB, this.\u02BB\u02BE\u02B6\u02B5\u02BD\u02BF\u02C1\u02B9\u02B4\u02B3\u02B9, this.\u02B7\u02BB\u02BA\u02C0\u02BF\u02B5\u02B5\u02B9\u02BD\u02C1\u02B4);
				\u02B5\u02BA\u02B7\u02C1\u02BD\u02BD\u02C1\u02B5\u02C1\u02BB\u02BF[\u02B6\u02B4\u02C0\u02B8\u02C1\u02C0\u02BE\u02BC\u02B6\u02B3\u02BF].transform.localPosition = this.\u02BE\u02B5\u02B3\u02B7\u02B5\u02BD\u02C1\u02B5\u02B2\u02BC\u02BD(num4, num5);
				\u02B6\u02B4\u02C0\u02B8\u02C1\u02C0\u02BE\u02BC\u02B6\u02B3\u02BF++;
			}
			num2++;
		}
		return \u02B6\u02B4\u02C0\u02B8\u02C1\u02C0\u02BE\u02BC\u02B6\u02B3\u02BF;
	}

	// Token: 0x06000DBB RID: 3515 RVA: 0x0000D5C8 File Offset: 0x0000B7C8
	protected virtual Vector3 \u02BE\u02B5\u02B3\u02B7\u02B5\u02BD\u02C1\u02B5\u02B2\u02BC\u02BD(int \u02B8\u02BD\u02BA\u02BF\u02BC\u02BB\u02BF\u02BA\u02B8\u02BC\u02BD, float \u02B4\u02BE\u02B7\u02BD\u02B3\u02C0\u02B3\u02BA\u02BC\u02B7\u02BC)
	{
		return new Vector3(this.firstNoteXPos + this.\u02BD\u02B5\u02BC\u02B6\u02B5\u02BE\u02C1\u02BE\u02B7\u02C1\u02B5 * (float)\u02B8\u02BD\u02BA\u02BF\u02BC\u02BB\u02BF\u02BA\u02B8\u02BC\u02BD, 0f, \u02B4\u02BE\u02B7\u02BD\u02B3\u02C0\u02B3\u02BA\u02BC\u02B7\u02BC);
	}

	// Token: 0x06000DBC RID: 3516 RVA: 0x0000D5E5 File Offset: 0x0000B7E5
	protected virtual float \u02B5\u02BE\u02B7\u02BC\u02C0\u02B2\u02B9\u02BD\u02BA\u02BF\u02BE(int \u02B8\u02BD\u02BA\u02BF\u02BC\u02BB\u02BF\u02BA\u02B8\u02BC\u02BD)
	{
		return this.\u02B3\u02B3\u02B5\u02BA\u02BA\u02B5\u02BD\u02B3\u02BC\u02C0\u02BB;
	}

	// Token: 0x06000DBD RID: 3517 RVA: 0x00070814 File Offset: 0x0006EA14
	protected void \u02B2\u02BF\u02B5\u02C1\u02B6\u02C0\u02B5\u02B5\u02B2\u02B2\u02B7()
	{
		this.\u02B8\u02BB\u02BC\u02BE\u02B6\u02B2\u02BC\u02B4\u02C0\u02B3\u02C0 = __FIXME_clon_util.\u02C1\u02BA\u02B7\u02C1\u02BB\u02B9\u02B9\u02BB\u02BC\u02B9\u02B8(this.\u02B8\u02B4\u02B5\u02B8\u02C1\u02B4\u02B2\u02B4\u02BF\u02BC\u02BC, this.\u02C0\u02B9\u02B3\u02B4\u02B8\u02BA\u02B3\u02B4\u02B7\u02B5\u02BD.\u02B7\u02B4\u02BA\u02B5\u02B5\u02B8\u02BE\u02B5\u02B3\u02B5\u02BB, this.\u02BB\u02BE\u02B6\u02B5\u02BD\u02BF\u02C1\u02B9\u02B4\u02B3\u02B9, this.\u02B7\u02BB\u02BA\u02C0\u02BF\u02B5\u02B5\u02B9\u02BD\u02C1\u02B4);
		this.\u02B3\u02BE\u02B8\u02BC\u02C0\u02B4\u02BC\u02BB\u02B4\u02BC\u02B4 = __FIXME_clon_util.\u02C1\u02BA\u02B7\u02C1\u02BB\u02B9\u02B9\u02BB\u02BC\u02B9\u02B8(this.\u02BD\u02B4\u02B8\u02B9\u02BF\u02BF\u02B4\u02C0\u02C1\u02BC\u02BF, this.\u02C0\u02B9\u02B3\u02B4\u02B8\u02BA\u02B3\u02B4\u02B7\u02B5\u02BD.\u02B7\u02B4\u02BA\u02B5\u02B5\u02B8\u02BE\u02B5\u02B3\u02B5\u02BB, this.\u02BB\u02BE\u02B6\u02B5\u02BD\u02BF\u02C1\u02B9\u02B4\u02B3\u02B9, this.\u02B7\u02BB\u02BA\u02C0\u02BF\u02B5\u02B5\u02B9\u02BD\u02C1\u02B4);
	}

	// Token: 0x06000DBE RID: 3518
	protected abstract void Update();

	// Token: 0x06000DBF RID: 3519 RVA: 0x00070874 File Offset: 0x0006EA74
	public static void \u02B3\u02B3\u02C1\u02B8\u02BA\u02B8\u02BF\u02BB\u02B2\u02BD\u02BC(GameObject[] \u02BB\u02BA\u02BF\u02B3\u02BF\u02C0\u02B5\u02B3\u02BB\u02BE\u02B2, int \u02BE\u02B9\u02B4\u02BD\u02C1\u02B4\u02BA\u02B3\u02B5\u02B8\u02B2)
	{
		for (int i = \u02BE\u02B9\u02B4\u02BD\u02C1\u02B4\u02BA\u02B3\u02B5\u02B8\u02B2; i < \u02BB\u02BA\u02BF\u02B3\u02BF\u02C0\u02B5\u02B3\u02BB\u02BE\u02B2.Length; i++)
		{
			GameObject gameObject = \u02BB\u02BA\u02BF\u02B3\u02BF\u02C0\u02B5\u02B3\u02BB\u02BE\u02B2[i];
			if (!gameObject.activeSelf)
			{
				break;
			}
			gameObject.SetActive(false);
		}
	}

	// Token: 0x04000943 RID: 2371
	[SerializeField]
	protected BasePlayer basePlayer;

	// Token: 0x04000944 RID: 2372
	protected GameManager \u02C0\u02B9\u02B3\u02B4\u02B8\u02BA\u02B3\u02B4\u02B7\u02B5\u02BD;

	// Token: 0x04000945 RID: 2373
	protected int \u02B2\u02B5\u02B7\u02BB\u02BD\u02B5\u02BA\u02B3\u02B2\u02BE\u02B3;

	// Token: 0x04000946 RID: 2374
	[HideInInspector]
	public float \u02B7\u02BB\u02BA\u02C0\u02BF\u02B5\u02B5\u02B9\u02BD\u02C1\u02B4;

	// Token: 0x04000947 RID: 2375
	public float \u02BD\u02B4\u02B8\u02B9\u02BF\u02BF\u02B4\u02C0\u02C1\u02BC\u02BF;

	// Token: 0x04000948 RID: 2376
	public float \u02B8\u02B4\u02B5\u02B8\u02C1\u02B4\u02B2\u02B4\u02BF\u02BC\u02BC;

	// Token: 0x04000949 RID: 2377
	public float \u02BB\u02BE\u02B6\u02B5\u02BD\u02BF\u02C1\u02B9\u02B4\u02B3\u02B9;

	// Token: 0x0400094A RID: 2378
	public float \u02BC\u02B7\u02B8\u02B7\u02B4\u02B8\u02BE\u02B2\u02B4\u02BA\u02B2;

	// Token: 0x0400094B RID: 2379
	public float \u02C0\u02B5\u02B4\u02B5\u02C0\u02BB\u02B7\u02BA\u02B7\u02BD\u02B7;

	// Token: 0x0400094C RID: 2380
	protected bool \u02B6\u02BB\u02B2\u02B5\u02BC\u02BB\u02B7\u02B3\u02C1\u02B4\u02B2;

	// Token: 0x0400094D RID: 2381
	protected int \u02B5\u02BB\u02B2\u02BA\u02B5\u02B6\u02B2\u02B2\u02BC\u02BD\u02B7 = 500;

	// Token: 0x0400094E RID: 2382
	public GameObject \u02B8\u02B4\u02B3\u02B7\u02B7\u02B7\u02BF\u02B8\u02BA\u02B4\u02BE;

	// Token: 0x0400094F RID: 2383
	protected GameObject[] \u02C0\u02B2\u02BD\u02B9\u02B8\u02B5\u02BD\u02B5\u02BC\u02B9\u02BD;

	// Token: 0x04000950 RID: 2384
	protected \u02BF\u02BB\u02BF\u02B2\u02B6\u02C1\u02BC\u02BD\u02B3\u02BB\u02BB[] \u02B7\u02B6\u02BD\u02BC\u02BD\u02BB\u02BA\u02B2\u02B4\u02B6\u02B7;

	// Token: 0x04000951 RID: 2385
	[Header("Note Positions")]
	[SerializeField]
	protected float laneCount;

	// Token: 0x04000952 RID: 2386
	[SerializeField]
	protected float firstNoteXPos;

	// Token: 0x04000953 RID: 2387
	protected float \u02BD\u02B5\u02BC\u02B6\u02B5\u02BE\u02C1\u02BE\u02B7\u02C1\u02B5;

	// Token: 0x04000954 RID: 2388
	protected float \u02B2\u02BE\u02B4\u02BE\u02B9\u02B5\u02B4\u02BA\u02B6\u02BF\u02B8;

	// Token: 0x04000955 RID: 2389
	protected float \u02BA\u02C1\u02B6\u02B4\u02B6\u02B6\u02B9\u02B7\u02B7\u02B2\u02BA;

	// Token: 0x04000956 RID: 2390
	protected float \u02B8\u02BB\u02BC\u02BE\u02B6\u02B2\u02BC\u02B4\u02C0\u02B3\u02C0;

	// Token: 0x04000957 RID: 2391
	protected float \u02B3\u02BE\u02B8\u02BC\u02C0\u02B4\u02BC\u02BB\u02B4\u02BC\u02B4;

	// Token: 0x04000958 RID: 2392
	protected float \u02B3\u02B3\u02B5\u02BA\u02BA\u02B5\u02BD\u02B3\u02BC\u02C0\u02BB = 0.25f;

	// Token: 0x04000959 RID: 2393
	public List<Note> \u02C0\u02C0\u02BA\u02B9\u02B7\u02B3\u02BB\u02B8\u02B8\u02B2\u02B3;

	// Token: 0x0400095A RID: 2394
	protected TrackFadeManager \u02BB\u02B6\u02BD\u02BA\u02BC\u02B2\u02B8\u02BB\u02C0\u02BD\u02BE;
}
