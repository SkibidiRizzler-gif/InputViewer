using System;
using System.Linq;
using System.Text;

// Token: 0x0200024E RID: 590
public struct \u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA : IComparable, IEquatable<\u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA>, IComparable<\u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA>
{
	// Token: 0x06001981 RID: 6529 RVA: 0x000C5B68 File Offset: 0x000C3D68
	public static \u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA \u02BE\u02B3\u02B4\u02C0\u02B3\u02BC\u02BB\u02B6\u02C0\u02BD\u02B9(\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC[] \u02BE\u02C1\u02BB\u02B9\u02B6\u02B5\u02C1\u02BE\u02C0\u02BC\u02B9)
	{
		return new \u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA
		{
			\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD = \u02BE\u02C1\u02BB\u02B9\u02B6\u02B5\u02C1\u02BE\u02C0\u02BC\u02B9
		};
	}

	// Token: 0x06001982 RID: 6530 RVA: 0x000C5B88 File Offset: 0x000C3D88
	public override int GetHashCode()
	{
		if (this.\u02B9\u02BE\u02B5\u02BD\u02B7\u02BA\u02B4\u02B2\u02B5\u02B7\u02C1 == null)
		{
			if (this.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD == null || this.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD.Count<\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC>() < 1)
			{
				this.\u02B9\u02BE\u02B5\u02BD\u02B7\u02BA\u02B4\u02B2\u02B5\u02B7\u02C1 = new int?(-1);
			}
			else
			{
				this.\u02B9\u02BE\u02B5\u02BD\u02B7\u02BA\u02B4\u02B2\u02B5\u02B7\u02C1 = new int?(this.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD.Select(new Func<\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC, string>(\u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA.<>c.<>9.\u02B9\u02B2\u02BB\u02BA\u02B9\u02B4\u02BC\u02B9\u02BA\u02B5\u02B9)).Aggregate(new Func<string, string, string>(\u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA.<>c.<>9.\u02BC\u02B4\u02B8\u02B3\u02B2\u02B4\u02BF\u02BA\u02BA\u02C0\u02BA)).GetHashCode());
			}
		}
		return this.\u02B9\u02BE\u02B5\u02BD\u02B7\u02BA\u02B4\u02B2\u02B5\u02B7\u02C1.Value;
	}

	// Token: 0x17000287 RID: 647
	// (get) Token: 0x06001983 RID: 6531 RVA: 0x00013566 File Offset: 0x00011766
	// (set) Token: 0x06001984 RID: 6532 RVA: 0x0001356E File Offset: 0x0001176E
	public \u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC[] \u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD { readonly get; private set; }

	// Token: 0x06001985 RID: 6533 RVA: 0x000C5C34 File Offset: 0x000C3E34
	public override string ToString()
	{
		if (this.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD.Count<\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC>() < 1)
		{
			return "<empty>";
		}
		StringBuilder stringBuilder = new StringBuilder(this.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD.First<\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC>().ToString());
		foreach (\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC u02B7_u02B6_u02BE_u02B4_u02B4_u02C0_u02B2_u02C0_u02B7_u02BE_u02BC in this.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD.Skip(1))
		{
			if (u02B7_u02B6_u02BE_u02B4_u02B4_u02C0_u02B2_u02C0_u02B7_u02BE_u02BC.\u02C1\u02B4\u02BF\u02C1\u02BE\u02B9\u02B6\u02B7\u02B5\u02B7\u02B5 is string)
			{
				stringBuilder.Append("->");
			}
			stringBuilder.Append(u02B7_u02B6_u02BE_u02B4_u02B4_u02C0_u02B2_u02C0_u02B7_u02BE_u02BC.ToString());
		}
		return stringBuilder.ToString();
	}

	// Token: 0x06001986 RID: 6534 RVA: 0x000C5CE8 File Offset: 0x000C3EE8
	public int CompareTo(\u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA \u02B9\u02BD\u02C0\u02B6\u02BB\u02B3\u02B2\u02B3\u02C1\u02B9\u02B9)
	{
		\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC[] array = this.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD;
		int num = ((array != null) ? array.Count<\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC>() : 0);
		\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC[] array2 = \u02B9\u02BD\u02C0\u02B6\u02BB\u02B3\u02B2\u02B3\u02C1\u02B9\u02B9.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD;
		int num2 = ((array2 != null) ? array2.Count<\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC>() : 0);
		int num3 = 0;
		while (num3 < num && num3 < num2)
		{
			int num4 = this.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD[num3].ToString().CompareTo(\u02B9\u02BD\u02C0\u02B6\u02BB\u02B3\u02B2\u02B3\u02C1\u02B9\u02B9.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD[num3].ToString());
			if (num4 != 0)
			{
				return num4;
			}
			num3++;
		}
		return Math.Min(Math.Max(num - num2, -1), 1);
	}

	// Token: 0x06001987 RID: 6535 RVA: 0x000C5D78 File Offset: 0x000C3F78
	public bool Equals(\u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA \u02B9\u02BD\u02C0\u02B6\u02BB\u02B3\u02B2\u02B3\u02C1\u02B9\u02B9)
	{
		\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC[] array = this.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD;
		int num = ((array != null) ? array.Count<\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC>() : 0);
		\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC[] array2 = \u02B9\u02BD\u02C0\u02B6\u02BB\u02B3\u02B2\u02B3\u02C1\u02B9\u02B9.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD;
		int num2 = ((array2 != null) ? array2.Count<\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC>() : 0);
		int num3 = 0;
		while (num3 < num && num3 < num2)
		{
			if (this.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD[num3].\u02C1\u02B4\u02BF\u02C1\u02BE\u02B9\u02B6\u02B7\u02B5\u02B7\u02B5 != \u02B9\u02BD\u02C0\u02B6\u02BB\u02B3\u02B2\u02B3\u02C1\u02B9\u02B9.\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD[num3].\u02C1\u02B4\u02BF\u02C1\u02BE\u02B9\u02B6\u02B7\u02B5\u02B7\u02B5)
			{
				return false;
			}
			num3++;
		}
		return num == num2;
	}

	// Token: 0x06001988 RID: 6536 RVA: 0x000C5B68 File Offset: 0x000C3D68
	public static \u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA \u02B4\u02C1\u02BA\u02B8\u02B2\u02B6\u02B8\u02B5\u02B9\u02B9\u02BF(\u02B7\u02B6\u02BE\u02B4\u02B4\u02C0\u02B2\u02C0\u02B7\u02BE\u02BC[] \u02BE\u02C1\u02BB\u02B9\u02B6\u02B5\u02C1\u02BE\u02C0\u02BC\u02B9)
	{
		return new \u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA
		{
			\u02C1\u02B4\u02B4\u02B9\u02C0\u02B4\u02B2\u02BE\u02BC\u02B8\u02BD = \u02BE\u02C1\u02BB\u02B9\u02B6\u02B5\u02C1\u02BE\u02C0\u02BC\u02B9
		};
	}

	// Token: 0x06001989 RID: 6537 RVA: 0x00013577 File Offset: 0x00011777
	public int CompareTo(object \u02BA\u02BE\u02BE\u02B3\u02BD\u02BD\u02B3\u02BA\u02B2\u02B9\u02B7)
	{
		if (\u02BA\u02BE\u02BE\u02B3\u02BD\u02BD\u02B3\u02BA\u02B2\u02B9\u02B7.GetType() != typeof(\u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA))
		{
			return -1;
		}
		return this.CompareTo((\u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA)\u02BA\u02BE\u02BE\u02B3\u02BD\u02BD\u02B3\u02BA\u02B2\u02B9\u02B7);
	}

	// Token: 0x0400122D RID: 4653
	public static readonly \u02B5\u02B4\u02C1\u02BA\u02C1\u02BF\u02B9\u02C0\u02C1\u02B6\u02BA \u02BB\u02C1\u02B5\u02BA\u02B7\u02BC\u02B3\u02B6\u02B2\u02C1\u02BE;

	// Token: 0x0400122F RID: 4655
	private int? \u02B9\u02BE\u02B5\u02BD\u02B7\u02BA\u02B4\u02B2\u02B5\u02B7\u02C1;
}
