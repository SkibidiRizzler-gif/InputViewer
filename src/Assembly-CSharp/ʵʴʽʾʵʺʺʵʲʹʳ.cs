using System;
using StrikeCore;

// Token: 0x020001A4 RID: 420
public struct \u02B5\u02B4\u02BD\u02BE\u02B5\u02BA\u02BA\u02B5\u02B2\u02B9\u02B3
{
	// Token: 0x170001CD RID: 461
	// (get) Token: 0x060012BA RID: 4794 RVA: 0x0000FB6E File Offset: 0x0000DD6E
	// (set) Token: 0x060012C1 RID: 4801 RVA: 0x0000FB8D File Offset: 0x0000DD8D
	public long \u02B2\u02C1\u02BC\u02C0\u02BA\u02B8\u02B2\u02B7\u02B2\u02B3\u02BB
	{
		get
		{
			return this.\u02B4\u02C1\u02B6\u02B3\u02B3\u02B9\u02BD\u02B4\u02B3\u02BD\u02B5;
		}
		set
		{
			this.\u02B4\u02C1\u02B6\u02B3\u02B3\u02B9\u02BD\u02B4\u02B3\u02BD\u02B5 |= value;
		}
	}

	// Token: 0x060012BB RID: 4795 RVA: 0x0009A158 File Offset: 0x00098358
	public bool \u02B3\u02B2\u02B6\u02BA\u02B2\u02BC\u02C0\u02BA\u02B9\u02BE\u02B8(Instrument \u02B7\u02BB\u02BA\u02BC\u02B4\u02B6\u02B4\u02B3\u02BD\u02BA\u02BF, Difficulty \u02B5\u02BD\u02C0\u02C1\u02BF\u02BF\u02B7\u02BF\u02B6\u02C1\u02BA)
	{
		long num = this.\u02B3\u02BA\u02C0\u02BC\u02B8\u02BD\u02C1\u02B6\u02C0\u02B9\u02BF(\u02B7\u02BB\u02BA\u02BC\u02B4\u02B6\u02B4\u02B3\u02BD\u02BA\u02BF, \u02B5\u02BD\u02C0\u02C1\u02BF\u02BF\u02B7\u02BF\u02B6\u02C1\u02BA);
		return (this.\u02B4\u02C1\u02B6\u02B3\u02B3\u02B9\u02BD\u02B4\u02B3\u02BD\u02B5 & num) == num;
	}

	// Token: 0x060012BC RID: 4796 RVA: 0x0009A17C File Offset: 0x0009837C
	public bool \u02BF\u02BB\u02C0\u02BB\u02B2\u02B6\u02B5\u02B8\u02B8\u02B2\u02BB(Instrument \u02B7\u02BB\u02BA\u02BC\u02B4\u02B6\u02B4\u02B3\u02BD\u02BA\u02BF)
	{
		long num = 15L << (int)(\u02B7\u02BB\u02BA\u02BC\u02B4\u02B6\u02B4\u02B3\u02BD\u02BA\u02BF * Instrument.GHLGuitar);
		return (this.\u02B4\u02C1\u02B6\u02B3\u02B3\u02B9\u02BD\u02B4\u02B3\u02BD\u02B5 & num) != 0L;
	}

	// Token: 0x060012BD RID: 4797 RVA: 0x0009A1A0 File Offset: 0x000983A0
	public bool \u02B9\u02BB\u02C1\u02BF\u02BA\u02BB\u02B8\u02BA\u02B5\u02B5\u02B9(Instrument \u02B7\u02BB\u02BA\u02BC\u02B4\u02B6\u02B4\u02B3\u02BD\u02BA\u02BF)
	{
		long num = -72L << (int)((\u02B7\u02BB\u02BA\u02BC\u02B4\u02B6\u02B4\u02B3\u02BD\u02BA\u02BF * Instrument.GHLBass) & (Instrument)86);
		return (this.\u02B4\u02C1\u02B6\u02B3\u02B3\u02B9\u02BD\u02B4\u02B3\u02BD\u02B5 & num) != 0L;
	}

	// Token: 0x060012BE RID: 4798 RVA: 0x0000FB76 File Offset: 0x0000DD76
	private long \u02B3\u02BA\u02C0\u02BC\u02B8\u02BD\u02C1\u02B6\u02C0\u02B9\u02BF(Instrument \u02B7\u02BB\u02BA\u02BC\u02B4\u02B6\u02B4\u02B3\u02BD\u02BA\u02BF, Difficulty \u02B5\u02BD\u02C0\u02C1\u02BF\u02BF\u02B7\u02BF\u02B6\u02C1\u02BA)
	{
		return 1L << (int)(\u02B7\u02BB\u02BA\u02BC\u02B4\u02B6\u02B4\u02B3\u02BD\u02BA\u02BF * Instrument.GHLGuitar + (sbyte)\u02B5\u02BD\u02C0\u02C1\u02BF\u02BF\u02B7\u02BF\u02B6\u02C1\u02BA);
	}

	// Token: 0x060012BF RID: 4799 RVA: 0x0009A1C4 File Offset: 0x000983C4
	public void \u02BB\u02BE\u02B4\u02B8\u02BA\u02B8\u02B5\u02B4\u02C1\u02B5\u02B2(Instrument \u02B7\u02BB\u02BA\u02BC\u02B4\u02B6\u02B4\u02B3\u02BD\u02BA\u02BF, Difficulty \u02B5\u02BD\u02C0\u02C1\u02BF\u02BF\u02B7\u02BF\u02B6\u02C1\u02BA)
	{
		long num = this.\u02B3\u02BA\u02C0\u02BC\u02B8\u02BD\u02C1\u02B6\u02C0\u02B9\u02BF(\u02B7\u02BB\u02BA\u02BC\u02B4\u02B6\u02B4\u02B3\u02BD\u02BA\u02BF, \u02B5\u02BD\u02C0\u02C1\u02BF\u02BF\u02B7\u02BF\u02B6\u02C1\u02BA);
		if ((this.\u02B4\u02C1\u02B6\u02B3\u02B3\u02B9\u02BD\u02B4\u02B3\u02BD\u02B5 & num) == num)
		{
			return;
		}
		this.\u02B4\u02C1\u02B6\u02B3\u02B3\u02B9\u02BD\u02B4\u02B3\u02BD\u02B5 |= num;
	}

	// Token: 0x060012C0 RID: 4800 RVA: 0x0000FB83 File Offset: 0x0000DD83
	public void \u02BC\u02B4\u02B5\u02B8\u02B3\u02B2\u02C0\u02BA\u02B8\u02BE\u02C1()
	{
		this.\u02B4\u02C1\u02B6\u02B3\u02B3\u02B9\u02BD\u02B4\u02B3\u02BD\u02B5 = 0L;
	}

	// Token: 0x04000E1B RID: 3611
	private long \u02B4\u02C1\u02B6\u02B3\u02B3\u02B9\u02BD\u02B4\u02B3\u02BD\u02B5;

	// Token: 0x04000E1C RID: 3612
	private const byte \u02B5\u02B4\u02C1\u02BA\u02B2\u02B5\u02B3\u02B6\u02BE\u02BB\u02B9 = 4;
}
